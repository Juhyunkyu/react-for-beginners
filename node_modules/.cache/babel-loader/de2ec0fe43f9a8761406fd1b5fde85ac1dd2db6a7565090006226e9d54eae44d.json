{"ast":null,"code":"var _jsxFileName = \"/home/dandy02/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map((movie //map을 쓸때는 key값이 있어야한다\n      ) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.medium_cover_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movie.genres.map((g //map을 쓸때는 key값이 있어야한다\n          ) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: g\n          }, g, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this) //map안에 map\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","medium_cover_image","title","summary","genres","g","id","_c","$RefreshReg$"],"sources":["/home/dandy02/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [movies, setMovies] = useState([])\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`,\n      )\n    ).json()\n    setMovies(json.data.movies)\n    setLoading(false)\n  }\n  useEffect(() => {\n    getMovies()\n  }, [])\n  return (\n    <div>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div>\n          {movies.map((\n            movie, //map을 쓸때는 key값이 있어야한다\n          ) => (\n            <div key={movie.id}>\n              {/* 이미지를 넣을때 */}\n              <img src={movie.medium_cover_image} />\n              <h2>{movie.title}</h2>\n              <p>{movie.summary}</p>\n              <ul>\n                {movie.genres.map((\n                  g, //map을 쓸때는 key값이 있어야한다\n                ) => (\n                  <li key={g}>{g}</li> //map안에 map\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\nexport default App\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,wEACH,CAAC,EACDD,IAAI,CAAC,CAAC;IACRF,SAAS,CAACE,IAAI,CAACE,IAAI,CAACL,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDP,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAAW,QAAA,EACGR,OAAO,gBACNH,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnBf,OAAA;MAAAW,QAAA,EACGN,MAAM,CAACW,GAAG,CAAC,CACVC,KAAK,CAAE;MAAA,kBAEPjB,OAAA;QAAAW,QAAA,gBAEEX,OAAA;UAAKkB,GAAG,EAAED,KAAK,CAACE;QAAmB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCf,OAAA;UAAAW,QAAA,EAAKM,KAAK,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBf,OAAA;UAAAW,QAAA,EAAIM,KAAK,CAACI;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBf,OAAA;UAAAW,QAAA,EACGM,KAAK,CAACK,MAAM,CAACN,GAAG,CAAC,CAChBO,CAAC,CAAE;UAAA,kBAEHvB,OAAA;YAAAW,QAAA,EAAaY;UAAC,GAALA,CAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,CAAC;UACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAXGE,KAAK,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CA1CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2CZ,eAAeA,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}