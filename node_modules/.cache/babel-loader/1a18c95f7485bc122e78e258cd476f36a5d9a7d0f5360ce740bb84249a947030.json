{"ast":null,"code":"var _jsxFileName = \"/home/dandy02/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]);\n  const [myCoins, setMyCoins] = useState(0);\n  useEffect(() => {\n    fetch('https://api.coinpaprika.com/v1/tickers').then(response => response.json()).then(json => {\n      setCoins(json);\n      setLoading(false);\n    });\n  }, []); //[] 빈값을 줘서 처음에 한번만 rendering한다\n  //   // 코인 API 주소 가면 text로 쭉 나열되서 json뷰어 설치함 https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh/related?hl=ko\n  //   // 너무 큰 사이즈면 Highlight할꺼냐고 물음 그럼 오케이 하면됨\n\n  const onChange = event => setMyCoins(event.target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n    setCoins(coin => coin.filter(item => myCoins >= item.quotes.USD.price));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"My Coins! \", loading ? '' : `(${coins.length})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        value: myCoins,\n        placeholder: \"\\uB0B4\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 $\\uB97C \\uB123\\uC73C\\uC2DC\\uC624!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n      children: coins.map(coin => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: coin.quotes.USD.price,\n        children: [coin.name, \"(\", coin.symbol, \"): $\", coin.quotes.USD.price, \" USD\"]\n      }, coin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this) // coins는 api에서 받아온 배열 배열안에 id가 있어서 map를 쓸때 index를 쓰지 않았다 api주소에 가보면 name과 symbol과 price가 있다 객체라 .으로 연결함 된다\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SNdhoWRWZGclVJlX/bFTD59ix/c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","coins","setCoins","myCoins","setMyCoins","fetch","then","response","json","onChange","event","target","value","onSubmit","preventDefault","coin","filter","item","quotes","USD","price","children","length","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","map","name","symbol","id","_c","$RefreshReg$"],"sources":["/home/dandy02/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [coins, setCoins] = useState([])\n  const [myCoins, setMyCoins] = useState(0)\n\n  useEffect(() => {\n    fetch('https://api.coinpaprika.com/v1/tickers')\n      .then((response) => response.json())\n      .then((json) => {\n        setCoins(json)\n        setLoading(false)\n      })\n  }, []) //[] 빈값을 줘서 처음에 한번만 rendering한다\n  //   // 코인 API 주소 가면 text로 쭉 나열되서 json뷰어 설치함 https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh/related?hl=ko\n  //   // 너무 큰 사이즈면 Highlight할꺼냐고 물음 그럼 오케이 하면됨\n\n  const onChange = (event) => setMyCoins(event.target.value)\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setCoins((coin) => coin.filter((item) => myCoins >= item.quotes.USD.price))\n  }\n\n  return (\n    <div>\n      <h1>My Coins! {loading ? '' : `(${coins.length})`}</h1>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={myCoins}\n          placeholder=\"내가 가지고 있는 $를 넣으시오!\"\n        />\n        <button>USD</button>\n      </form>\n\n      {loading ? (\n        <strong>loading...</strong>\n      ) : (\n        <select>\n          {coins.map((coin) => (\n            <option key={coin.id} value={coin.quotes.USD.price}>\n              {coin.name}({coin.symbol}): ${coin.quotes.USD.price} USD\n            </option> // coins는 api에서 받아온 배열 배열안에 id가 있어서 map를 쓸때 index를 쓰지 않았다 api주소에 가보면 name과 symbol과 price가 있다 객체라 .으로 연결함 된다\n          ))}\n        </select>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}