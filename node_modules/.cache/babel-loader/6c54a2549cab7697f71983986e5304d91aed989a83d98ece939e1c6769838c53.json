{"ast":null,"code":"var _jsxFileName = \"/home/dandy02/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true); // 로딩을 뿌려주고 다되면 없어지는거\n  const [movies, setMovies] = useState([]);\n  const key = 'cdb0b382a2f5f9abc0bc12e7bb17ca9e'; // 발급받은 키\n  const targetDt = '20231114'; // 조회하고자 하는 날짜를 'yyyymmdd' 형식으로 입력 오늘 날짜로 적어서 헤맴 어제 날짜전 적어줘야 나옴\n  const url = `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${key}&targetDt=${targetDt}`;\n  const getMovies = async () => {\n    const response = await fetch(url);\n    const json = await response.json();\n    setMovies(json);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  //위에 내용과 같다\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((json) => {\n  //       setMovies(json)\n  //       setLoading(false)\n  //     })\n  //     .catch((error) => {\n  //       console.error(error)\n  //       setLoading(false)\n  //     })\n  // }, [])\n  console.log(movies); // 참고해서 boxOfficeResult.dailyBoxOfficeList 이렇게 데이터를 찾을수있다\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = App;\nexport default App;\n\n//키발급 cdb0b382a2f5f9abc0bc12e7bb17ca9e\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","movies","setMovies","key","targetDt","url","getMovies","response","fetch","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dandy02/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction App() {\n  const [loading, setLoading] = useState(true) // 로딩을 뿌려주고 다되면 없어지는거\n  const [movies, setMovies] = useState([])\n  const key = 'cdb0b382a2f5f9abc0bc12e7bb17ca9e' // 발급받은 키\n  const targetDt = '20231114' // 조회하고자 하는 날짜를 'yyyymmdd' 형식으로 입력 오늘 날짜로 적어서 헤맴 어제 날짜전 적어줘야 나옴\n  const url = `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${key}&targetDt=${targetDt}`\n  const getMovies = async () => {\n    const response = await fetch(url)\n    const json = await response.json()\n    setMovies(json)\n    setLoading(false)\n  }\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  //위에 내용과 같다\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((json) => {\n  //       setMovies(json)\n  //       setLoading(false)\n  //     })\n  //     .catch((error) => {\n  //       console.error(error)\n  //       setLoading(false)\n  //     })\n  // }, [])\n  console.log(movies) // 참고해서 boxOfficeResult.dailyBoxOfficeList 이렇게 데이터를 찾을수있다\n  return <div>{loading ? <h1>Loading....</h1> : null}</div>\n}\nexport default App\n\n//키발급 cdb0b382a2f5f9abc0bc12e7bb17ca9e\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,EAAC;EAC7C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,GAAG,GAAG,kCAAkC,EAAC;EAC/C,MAAMC,QAAQ,GAAG,UAAU,EAAC;EAC5B,MAAMC,GAAG,GAAI,mGAAkGF,GAAI,aAAYC,QAAS,EAAC;EACzI,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClCP,SAAS,CAACO,IAAI,CAAC;IACfT,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDP,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAI,OAAO,CAACC,GAAG,CAACV,MAAM,CAAC,EAAC;EACpB,oBAAOL,OAAA;IAAAgB,QAAA,EAAMb,OAAO,gBAAGH,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D;AAAClB,EAAA,CA/BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;;AAElB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}