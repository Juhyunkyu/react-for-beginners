{"ast":null,"code":"var _jsxFileName = \"/home/dandy02/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport Button from './Button';\nimport styles from './App.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const onChange = event => setKeyword(event.target.value);\n  const onClick = () => setValue(prev => prev + 1);\n  console.log('i run all the time');\n  // const iRunOnlyOnce = () => {\n  //   console.log('i run only once')\n  // }\n  // useEffect(iRunOnlyOnce, [])\n\n  // useEffect는 랜더링할때 한번만 랜더링하게 하는법\n\n  //시작점에서 랜더링하고 말기 (한번만 랜더링)\n  useEffect(() => {\n    console.log('call the api...');\n  }, []);\n  //위에꺼라 같은말 화살표 함수 참고\n  // useEffect(함수, []) []에 빈값을 주면 한번만 실행된다\n\n  //뭔가가 update가 되었을때 랜더링하기\n  useEffect(() => {\n    if (keyword !== '' && keyword.length > 5) {\n      //input의 value값 keyword가 빈값이 아니거나 길이가 5이상일때 실행\n      console.log('search for....');\n    }\n  }, [keyword]); //[]에 keyword를 넣어주면 keyword가 변화할때마다 실행시킨다\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: keyword,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"Search here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: 'Wellcome back'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BbMWr0GCdjlvLCLtxARhqoSwibg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","styles","useState","useEffect","jsxDEV","_jsxDEV","App","_s","counter","setValue","keyword","setKeyword","onChange","event","target","value","onClick","prev","console","log","length","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","title","text","_c","$RefreshReg$"],"sources":["/home/dandy02/my-app/src/App.js"],"sourcesContent":["import Button from './Button'\nimport styles from './App.module.css'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n  const [counter, setValue] = useState(0)\n  const [keyword, setKeyword] = useState('')\n  const onChange = (event) => setKeyword(event.target.value)\n\n  const onClick = () => setValue((prev) => prev + 1)\n  console.log('i run all the time')\n  // const iRunOnlyOnce = () => {\n  //   console.log('i run only once')\n  // }\n  // useEffect(iRunOnlyOnce, [])\n\n  // useEffect는 랜더링할때 한번만 랜더링하게 하는법\n\n  //시작점에서 랜더링하고 말기 (한번만 랜더링)\n  useEffect(() => {\n    console.log('call the api...')\n  }, [])\n  //위에꺼라 같은말 화살표 함수 참고\n  // useEffect(함수, []) []에 빈값을 주면 한번만 실행된다\n\n  //뭔가가 update가 되었을때 랜더링하기\n  useEffect(() => {\n    if (keyword !== '' && keyword.length > 5) {\n      //input의 value값 keyword가 빈값이 아니거나 길이가 5이상일때 실행\n      console.log('search for....')\n    }\n  }, [keyword]) //[]에 keyword를 넣어주면 keyword가 변화할때마다 실행시킨다\n\n  return (\n    <div>\n      <input\n        value={keyword}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"Search here...\"\n      />\n      <h1 className={styles.title}>{counter}</h1>\n      <Button text={'Wellcome back'} />\n      <button onClick={onClick}>click me</button>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAIC,KAAK,IAAKF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE1D,MAAMC,OAAO,GAAGA,CAAA,KAAMP,QAAQ,CAAEQ,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EAClDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC;EACA;EACA;EACA;;EAEA;;EAEA;EACAhB,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;;EAEA;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIO,OAAO,KAAK,EAAE,IAAIA,OAAO,CAACU,MAAM,GAAG,CAAC,EAAE;MACxC;MACAF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC,EAAC;;EAEd,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEU,KAAK,EAAEL,OAAQ;MACfE,QAAQ,EAAEA,QAAS;MACnBU,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFtB,OAAA;MAAIuB,SAAS,EAAE3B,MAAM,CAAC4B,KAAM;MAAAR,QAAA,EAAEb;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CtB,OAAA,CAACL,MAAM;MAAC8B,IAAI,EAAE;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCtB,OAAA;MAAQW,OAAO,EAAEA,OAAQ;MAAAK,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACpB,EAAA,CA1CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4CZ,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}